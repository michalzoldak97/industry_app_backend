version: "3.2"

services:
  # elasticsearch:
  #   build:
  #     context: elasticsearch/
  #     args:
  #       ELK_VERSION: 7.13.1
  #   volumes:
  #     - type: bind
  #       source: ./elasticsearch/config/elasticsearch.yml
  #       target: /usr/share/elasticsearch/config/elasticsearch.yml
  #       read_only: true
  #     - type: volume
  #       source: elasticsearch
  #       target: /usr/share/elasticsearch/data
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  #   env_file:
  #     - ./.env/elasticsearch.env
  #   networks:
  #     - app_net

  # logstash:
  #   build:
  #     context: logstash/
  #     args:
  #       ELK_VERSION: 7.13.1
  #   volumes:
  #     - type: bind
  #       source: ./logstash/config/logstash.yml
  #       target: /usr/share/logstash/config/logstash.yml
  #       read_only: true
  #     - type: bind
  #       source: ./logstash/pipeline
  #       target: /usr/share/logstash/pipeline
  #       read_only: true
  #     - type: bind
  #       source: ./logstash/pipeline
  #       target: /etc/logstash
  #       read_only: true
  #   command: logstash -f /etc/logstash/logstash.conf
  #   ports:
  #     - "12201:12201/udp"
  #   env_file:
  #     - ./.env/logstash.env
  #   networks:
  #     - app_net
  #   depends_on:
  #     - elasticsearch
  #   links:
  #     - elasticsearch

  # kibana:
  #   build:
  #     context: kibana/
  #     args:
  #       ELK_VERSION: 7.13.1
  #   volumes:
  #     - type: bind
  #       source: ./kibana/config/kibana.yml
  #       target: /usr/share/kibana/config/kibana.yml
  #       read_only: true
  #   ports:
  #     - "5601:5601"
  #   env_file:
  #     - ./.env/kibana.env
  #   logging:
  #     driver: gelf
  #     options:
  #       gelf-address: "udp://localhost:12201"
  #       tag: "test_app_kibana"
  #   networks:
  #     - app_net
  #   depends_on:
  #     - elasticsearch
  #   restart: on-failure

  rabbitmq:
    image: "rabbitmq:3.8.17-management"
    ports:
      - "15673:15672"
      - "5673:5672"
    env_file:
      - ./.env/rabbitmq.env
    # logging:
    #   driver: gelf
    #   options:
    #     gelf-address: "udp://localhost:12201"
    #     tag: "test_app_rabbit"
    networks:
      - app_net
  #   # depends_on:
  #   #   - elasticsearch

  mysql:
    # build: ./mysql
    image: "mysql:8"
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - ./mysql/datadir:/var/lib/mysql
    ports:
      - "3307:3306"
    # logging:
    #   driver: gelf
    #   options:
    #     gelf-address: "udp://localhost:12201"
    #     tag: "test_app_mysql"
    env_file:
      - ./.env/mysql.env
    networks:
      - app_net
    depends_on:
      - rabbitmq

  publisher_api:
    build: ./UserAntropometricsAPI
    ports:
      - "8091:8081"
    env_file:
      - ./.env/api_env.env
    # logging:
    #   driver: gelf
    #   options:
    #     gelf-address: "udp://localhost:12201"
    #     tag: "test_app_publisher_api"
    networks:
      - app_net
    depends_on:
      - rabbitmq

  reciever_api:
    build: ./Industry4MedicalRecieverAPI
    env_file:
      - ./.env/api_env.env
    # logging:
    #   driver: gelf
    #   options:
    #     gelf-address: "udp://localhost:12201"
    #     tag: "test_app_reciever_api"
    networks:
      - app_net
    depends_on:
      - mysql
    links:
      - rabbitmq
    restart: always

  # mysql_api:
  #   build: ./mysql_api
  #   ports:
  #     - "8090:8080"
  #   env_file:
  #     - ./.env/api_env.env
  #   # logging:
  #   #   driver: gelf
  #   #   options:
  #   #     gelf-address: "udp://localhost:12201"
  #   #     tag: "test_app_mysql_api"
  #   networks:
  #     - app_net
  #   depends_on:
  #     - mysql
  #   restart: on-failure

  login_register_api:
    container_name: "login_register_api"
    build: ./industry4medical_login_register
    ports:
      - "8092:8082"
    volumes:
      - ./industry4medical_login_register/:/app
      - /app/node_modules
    env_file:
      - ./.env/api_env.env
    # logging:
    #   driver: gelf
    #   options:
    #     gelf-address: "udp://localhost:12201"
    #     tag: "test_app_login_register_api"
    networks:
      - app_net
    depends_on:
      - mysql

networks:
  app_net:
    driver: bridge

volumes:
  elasticsearch:
